#root {
  // in this root thing so I can change the variables from the app
  $grid-size: 14;
  $square-size: 14vh;
  $side-clue-box-width: 14vh;
}

$headerAndBorderColour: #8bbee3;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  // font-size: 0.9em;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

@mixin square-size-and-border {
  // box-sizing: border-box;
  border: 2px solid $headerAndBorderColour;
  height: var(--square-size);
  width: var(--square-size);
}

.emptySquare {
  background-color: white;
  @include square-size-and-border()
}

.filledSquare {
  background-color: #171717;
  @include square-size-and-border();
}

.incorrectSquare {
  // background-color: rgb(255, 157, 157);
  background-color: white;
  color: $headerAndBorderColour;
  text-align: center;
  vertical-align: middle;
  font-size: 60px;
  padding-bottom: 12px;
  padding-left: 6px;
  line-height: 0%;
  // background-color: #8bbee3;
  @include square-size-and-border();
}

.topClueBox {
  height: auto;
  width: var(--square-size);
  align-items: center;
  justify-content: center;
  display: inline-flex;
  text-align: center;
  padding: 2px;
  box-sizing: border-box;
  // text-align: end;
}

.sideClueBox {
  height: var(--square-size);
  width: var(--side-clue-box-width);
  // width: auto;
  align-items: center;
  justify-content: center;
  display: inline-flex;
  text-align: center;
  padding: 2px;
  box-sizing: border-box;
}

.spacerBox {
  height: var(--square-size);
  width: var(--square-size);
  display: inline-flex;
}

.cornerSpacerBox {
  height: var(--square-size);
  width: var(--side-clue-box-width);
  display: inline-flex;
}

.board-squares {
  // position: absolute;
  // top: 100px; //to clear header and a bit of room
  // left: calc((100% - (var(--square-size) * (var(--grid-size) - 1)))/4);
  // left: 156px;
  // width: calc(var(--square-size) * (var(--grid-size) + 1));
  margin: 80px auto 0px auto;
  width: fit-content;
}

.row {
  display: flex;
  margin-bottom: -3px;
}

.solvedStateHeader {
  text-align: center;
  vertical-align: top;
  font-size: 50px;
  color: white;
  margin-top: -76px;
  margin-bottom: -66.67px;
}

.sizeButtonHolder {
  position: absolute;
  left: 50%;
  top: 50%;
  margin-right: -50%;
  transform: translate(-50%, -50%);
}

.sizeButton {
  background-color: white;
  border: 8px solid $headerAndBorderColour;
  padding: 20px;
  margin: 0.2em;
  font-size: 2em;
  text-decoration: none;
  color: black;
}

.prePuzzleHeader {
  text-align: center;
  margin-top: 180px;
}

.createCustomFieldset {
  border: none;
}

.customSizeForm {
  text-align: center;
}

.createCustomInput {
  border: 2px solid $headerAndBorderColour;
  width: 80px;
  height: 20px;
}

.centreForm {
  position: absolute;
  left: 50%;
  margin-top: 20px;
  margin-right: -50%;
  transform: translate(-50%, -50%);
}

.header {
  background-color: $headerAndBorderColour;
  height: 80px;

  .headerLinkDiv {
    height: 80px;
    width: 120px;
    text-align: center;
    line-height: 80px;

    &:hover {
      background-color: #6fa7cf;
    }
  }

  .headerLink {
    text-decoration: none;
    color: white;
    margin: 0px;
  }
}

.submitCustomPuzzleSizeButton {
  background-color: white;
  border: 2px solid $headerAndBorderColour;
  font-size: 13px;
  // box-shadow: 1px 1px #171717;
}

.newPuzzleButtonPositionDiv {
  width: fit-content;
  display: flex;
  align-items: flex-end;
  margin-top: -30px;
  margin-left: calc(50vw + calc(var(--square-size) * calc(var(--grid-size) / 2)) + 5px);
  //left margin: half screen plus half of grid size plus a bit of space.
}

.newPuzzleButton {
  background-color: white;
  color: 171717;
  border: 2px solid $headerAndBorderColour;
  padding: 4px;
  font-size: 13px;
}